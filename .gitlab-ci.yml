variables:
  IMAGE_NAME: "${CI_REGISTRY_IMAGE}"
  NEWMAN_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/newman"
  LIQUIBASE_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/liquibase"
  COMPOSE_FILE: docker-compose.yml:docker-compose.build.yml

stages:
  - build
  - test

image: registry.gitlab.com/jakubigla/docker-compose-image

services:
  - docker:dind

before_script:
  - docker --version
  - docker-compose --version
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

api:
  stage: build
  script:
    - docker-compose run --rm -v "$(pwd)/.m2:/root/.m2" maven
    - docker-compose build api
    - docker-compose push api
  artifacts:
    paths:
      - target/*
  cache:
    paths:
      - .m2
  tags:
    - docker

postman:
  stage: build
  script:
    - docker-compose build postman
    - docker-compose push postman
  tags:
    - docker

liquibase:
  stage: build
  script:
    - docker-compose build liquibase
    - docker-compose push liquibase
  tags:
    - docker

compose:
  variables:
    COMPOSE_FILE: docker-compose.yml
  stage: build
  script:
    - docker-compose config > "docker-compose.${CI_COMMIT_SHORT_SHA}.yml"
  artifacts:
    paths:
      - "docker-compose.${CI_COMMIT_SHORT_SHA}.yml"
  tags:
    - docker

quality:
  stage: test
  dependencies:
    - api
  script:
    - docker-compose run --rm
        -v "$(pwd)/.sonar:/root/.sonar"
        -v "$(pwd)/.m2:/root/.m2"
      sonar-check
  cache:
    paths:
      - .m2
      - .sonar
  tags:
    - docker

integration:
  variables:
    POSTMAN_SLEEP: 20
  stage: test
  script:
    - docker-compose pull
    - docker-compose run --rm postman
  tags:
    - docker